jacoco {
    toolVersion = "0.8.7"
}
def myExcludedClasses = ['com/myapp/*.class',
                         'com/myapp/web/**',
                         'com/myapp/config/*',
                         'com/myapp/domain/*',
                         'com/myapp/service/mapper/*',
                         'com/myapp/service/dto/*',
                         'com/myapp/aop/logging/*',
                         'com/myapp/security/oauth2/OAuthIdpTokenResponseDTO.*',
                         'com/myapp/repository/**']


jacocoTestReport {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    classDirectories.from = files(sourceSets.main.output.classesDirs)
    sourceDirectories.from = files(sourceSets.main.java.srcDirs)

    reports {
        xml.enabled = true
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                excludes: myExcludedClasses)
        })
    }
}

file("sonar-project.properties").withReader {
    Properties sonarProperties = new Properties()
    sonarProperties.load(it)

    sonarProperties.each { key, value ->
        sonarqube {
            properties {
                property key, value
            }
        }
    }
}


